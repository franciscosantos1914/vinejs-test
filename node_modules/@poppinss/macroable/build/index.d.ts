export default abstract class Macroable {
    static macro<T extends {
        new (...args: any[]): any;
    }, K extends keyof InstanceType<T>>(this: T, name: K, value: InstanceType<T>[K]): void;
    static getter<T extends {
        new (...args: any[]): any;
    }, K extends keyof InstanceType<T>>(this: T, name: K, accumulator: () => InstanceType<T>[K], singleton?: boolean): void;
}
