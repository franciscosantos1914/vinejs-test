import { helpers } from '../src/vine/helpers.js';
import { SimpleErrorReporter } from '../src/reporters/simple_error_reporter.js';
import { SimpleMessagesProvider } from '../src/messages_provider/simple_messages_provider.js';
export class FieldFactory {
    create(fieldName, value, messagesProvider, errorReporter) {
        const reporter = errorReporter || new SimpleErrorReporter();
        const provider = messagesProvider || new SimpleMessagesProvider({}, {});
        return {
            value: value,
            isArrayMember: false,
            parent: { [fieldName]: value },
            data: { [fieldName]: value },
            name: fieldName,
            wildCardPath: fieldName,
            isDefined: helpers.exists(value),
            isValid: true,
            meta: {},
            mutate(newValue) {
                this.value = newValue;
                this.isDefined = helpers.exists(newValue);
                return this;
            },
            report(message, rule, context, args) {
                this.isValid = false;
                reporter.report(provider.getMessage(message, rule, context, args), rule, context, args);
            },
        };
    }
}
