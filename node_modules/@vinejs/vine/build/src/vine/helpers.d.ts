import validator from 'validator';
export declare const helpers: {
    exists(value: any): boolean;
    isMissing(value: any): boolean;
    isTrue(value: any): boolean;
    isFalse(value: any): boolean;
    isString(value: unknown): value is string;
    isObject<Value>(value: unknown): value is Record<PropertyKey, Value>;
    hasKeys(value: Record<string, any>, keys: string[]): boolean;
    isArray<Value_1>(value: unknown): value is Value_1[];
    isNumeric(value: any): boolean;
    asNumber(value: any): number;
    asBoolean(value: any): boolean | null;
    isEmail: typeof import("validator/lib/isEmail.js").default;
    isURL: typeof import("validator/lib/isURL.js").default;
    isAlpha: typeof validator.default.isAlpha;
    isAlphaNumeric: typeof validator.default.isAlphanumeric;
    isIP: typeof validator.default.isIP;
    isUUID: typeof validator.default.isUUID;
    isAscii: typeof validator.default.isAscii;
    isCreditCard: typeof validator.default.isCreditCard;
    isIBAN: typeof import("validator/lib/isIBAN.js").default;
    isJWT: typeof validator.default.isJWT;
    isLatLong: typeof validator.default.isLatLong;
    isMobilePhone: typeof validator.default.isMobilePhone;
    isPassportNumber: typeof validator.default.isPassportNumber;
    isPostalCode: typeof validator.default.isPostalCode;
    isSlug: typeof validator.default.isSlug;
    isDecimal: typeof validator.default.isDecimal;
    mobileLocales: validator.default.MobilePhoneLocale[];
    postalCountryCodes: validator.default.PostalCodeLocale[];
    passportCountryCodes: readonly ["AM", "AR", "AT", "AU", "AZ", "BE", "BG", "BR", "BY", "CA", "CH", "CY", "CZ", "DE", "DK", "DZ", "ES", "FI", "FR", "GB", "GR", "HR", "HU", "IE", "IN", "ID", "IR", "IS", "IT", "JM", "JP", "KR", "KZ", "LI", "LT", "LU", "LV", "LY", "MT", "MZ", "MY", "MX", "NL", "NZ", "PH", "PK", "PL", "PT", "RO", "RU", "SE", "SL", "SK", "TH", "TR", "UA", "US"];
    isHexColor: (value: string) => boolean;
    isActiveURL: (url: string) => Promise<boolean>;
    isDistinct: (dataSet: any[], fields?: string | string[]) => boolean;
};
