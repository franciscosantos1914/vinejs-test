import { helpers } from './helpers.js';
import { createRule } from './create_rule.js';
import { SchemaBuilder } from '../schema/builder.js';
import { SimpleMessagesProvider } from '../messages_provider/simple_messages_provider.js';
import { VineValidator } from './validator.js';
import { fields, messages } from '../defaults.js';
import { SimpleErrorReporter } from '../reporters/simple_error_reporter.js';
export class Vine extends SchemaBuilder {
    messagesProvider = new SimpleMessagesProvider(messages, fields);
    errorReporter = () => new SimpleErrorReporter();
    convertEmptyStringsToNull = false;
    helpers = helpers;
    createRule = createRule;
    compile(schema) {
        return new VineValidator(schema, {
            convertEmptyStringsToNull: this.convertEmptyStringsToNull,
            messagesProvider: this.messagesProvider,
            errorReporter: this.errorReporter,
        });
    }
    validate(options) {
        const validator = this.compile(options.schema);
        return validator.validate(options.data, options);
    }
}
