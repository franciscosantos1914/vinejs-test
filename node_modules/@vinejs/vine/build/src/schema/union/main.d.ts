import { RefsStore, UnionNode } from '@vinejs/compiler/types';
import { UnionConditional } from './conditional.js';
import { OTYPE, COTYPE, PARSE } from '../../symbols.js';
import type { ConstructableSchema, ParserOptions, SchemaTypes, UnionNoMatchCallback } from '../../types.js';
export declare class VineUnion<Conditional extends UnionConditional<SchemaTypes>> implements ConstructableSchema<Conditional[typeof OTYPE], Conditional[typeof COTYPE]> {
    #private;
    [OTYPE]: Conditional[typeof OTYPE];
    [COTYPE]: Conditional[typeof COTYPE];
    constructor(conditionals: Conditional[]);
    otherwise(callback: UnionNoMatchCallback<Record<string, unknown>>): this;
    clone(): this;
    [PARSE](propertyName: string, refs: RefsStore, options: ParserOptions): UnionNode;
}
