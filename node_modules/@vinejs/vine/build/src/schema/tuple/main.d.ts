import { RefsStore, TupleNode } from '@vinejs/compiler/types';
import { BaseType } from '../base/main.js';
import { IS_OF_TYPE, PARSE, UNIQUE_NAME } from '../../symbols.js';
import type { FieldOptions, ParserOptions, SchemaTypes, Validation } from '../../types.js';
export declare class VineTuple<Schema extends SchemaTypes[], Output extends any[], CamelCaseOutput extends any[]> extends BaseType<Output, CamelCaseOutput> {
    #private;
    [UNIQUE_NAME]: string;
    [IS_OF_TYPE]: (value: unknown) => boolean;
    constructor(schemas: [...Schema], options?: FieldOptions, validations?: Validation<any>[]);
    allowUnknownProperties<Value>(): VineTuple<Schema, [
        ...Output,
        ...Value[]
    ], [
        ...CamelCaseOutput,
        ...Value[]
    ]>;
    clone(): this;
    [PARSE](propertyName: string, refs: RefsStore, options: ParserOptions): TupleNode;
}
