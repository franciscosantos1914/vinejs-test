import { BaseLiteralType } from '../base/literal.js';
import type { FieldContext, FieldOptions, Validation } from '../../types.js';
export declare class VineEnum<const Values extends readonly unknown[]> extends BaseLiteralType<Values[number], Values[number]> {
    #private;
    static rules: {
        enum: (options: {
            choices: readonly any[] | ((field: FieldContext) => readonly any[]);
        }) => Validation<{
            choices: readonly any[] | ((field: FieldContext) => readonly any[]);
        }>;
    };
    constructor(values: Values | ((field: FieldContext) => Values), options?: FieldOptions, validations?: Validation<any>[]);
    clone(): this;
}
