export declare const numberRule: (options: {
    strict?: boolean | undefined;
}) => import("../../types.js").Validation<{
    strict?: boolean | undefined;
}>;
export declare const minRule: (options: {
    min: number;
}) => import("../../types.js").Validation<{
    min: number;
}>;
export declare const maxRule: (options: {
    max: number;
}) => import("../../types.js").Validation<{
    max: number;
}>;
export declare const rangeRule: (options: {
    min: number;
    max: number;
}) => import("../../types.js").Validation<{
    min: number;
    max: number;
}>;
export declare const positiveRule: (options?: undefined) => import("../../types.js").Validation<undefined>;
export declare const negativeRule: (options?: undefined) => import("../../types.js").Validation<undefined>;
export declare const decimalRule: (options: {
    range: [number, number?];
}) => import("../../types.js").Validation<{
    range: [number, number?];
}>;
export declare const withoutDecimalsRule: (options?: undefined) => import("../../types.js").Validation<undefined>;
