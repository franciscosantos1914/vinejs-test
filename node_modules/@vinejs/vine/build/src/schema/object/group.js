import { messages } from '../../defaults.js';
import { OTYPE, COTYPE, PARSE } from '../../symbols.js';
export class ObjectGroup {
    #conditionals;
    #otherwiseCallback = (_, field) => {
        field.report(messages.unionGroup, 'unionGroup', field);
    };
    constructor(conditionals) {
        this.#conditionals = conditionals;
    }
    clone() {
        const cloned = new ObjectGroup(this.#conditionals);
        cloned.otherwise(this.#otherwiseCallback);
        return cloned;
    }
    otherwise(callback) {
        this.#otherwiseCallback = callback;
        return this;
    }
    [PARSE](refs, options) {
        return {
            type: 'group',
            elseConditionalFnRefId: refs.trackConditional(this.#otherwiseCallback),
            conditions: this.#conditionals.map((conditional) => conditional[PARSE](refs, options)),
        };
    }
}
