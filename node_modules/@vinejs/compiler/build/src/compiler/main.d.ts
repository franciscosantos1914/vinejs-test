import { CompilerBuffer } from './buffer.js';
import type { Refs, RootNode, CompilerField, CompilerNodes, CompilerParent, CompilerOptions, ErrorReporterContract, MessagesProviderContact } from '../types.js';
export declare class Compiler {
    #private;
    variablesCounter: number;
    constructor(rootNode: RootNode, options?: CompilerOptions);
    createFieldFor(node: CompilerNodes, parent: CompilerParent): CompilerField;
    compileNode(node: CompilerNodes, buffer: CompilerBuffer, parent: CompilerParent, parentField?: CompilerField): void;
    compile(): (data: any, meta: Record<string, any>, refs: Refs, messagesProvider: MessagesProviderContact, errorReporter: ErrorReporterContract) => Promise<Record<string, any>>;
}
//# sourceMappingURL=main.d.ts.map